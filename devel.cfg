[buildout]

extends =
    project.cfg

parts +=
    releaser
    test
    testall
    xmltest
    xmlalltests
#    pylint
#    pylint-test
    pyflakes
    pyflakes-test
    zptlint
    zptlint-test

develop +=

eggs +=
    sphinx
    ZopeHealthWatcher
    teamrubber.pdberrorlog
    zope.testrecorder
    zope.testing
    teamrubber.theoracle
    Products.DocFinderTab
    plone.reload
    i18ndude
    ploomcake.core[test]
    redomino.tokenrole[test]

# Keep a list of all locations of actual code. There's no reason to be running
# pyflakes over setup.py and the like.
package-directories = 
#    src/namespace.yourpackage/namespace/yourpackage

extensions +=


[instance]

zcml +=
    teamrubber.pdberrorlog
    zope.testrecorder
    teamrubber.theoracle
    plone.reload

[productdistros]
urls +=
    http://www.simplistix.co.uk/software/zope/zdb/zdb-0.8.2.tgz

[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser

[testall]
recipe = plone.recipe.alltests
eggs = 
#    namespace.yourpackage
    
exclude =
    PIL
    windmill
    teamrubber.*
    repoze.*
    niteoweb.*
    ceflasuite.corporate-theme
    xdv
    lxml
    imsvdex
    python*
    dataflake*
    BeautifulSoup
    borg.*
    five.*
    collective.*
    Zope*
    simplejson
    wicked
    hachoir*
    initgroups
    kss*
    z3c.*
    ThreadLock
    Record
    MultiMapping
    archetypes.*
    Plone
    Products.*
    plone.*
    Missing
    Acquisition
    ClientForm
    DateTime
    ExtensionClass
    Markdown
    Persistence
    Products.CMFCore
    Products.ExternalEditor
    Products.SecureMailHost
    Products.ZSQLMethods
    RestrictedPython
    Unidecode
    ZConfig
    ZODB3
    collective.testcaselayer
    docutils
    elementtree
    feedparser
    manuel
    markdown
    mechanize
    nt-svcutils
    plone.reload
    python-gettext
    python-openid
    pytz
    roman
    tempstorage
    transaction
    zc.lockfile
    zdaemon
    zodbcode
    zope.*
    Zope2
    zLOG


[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
#extra-paths = 
#    ${instance:eggs-directory}
eggs =
    ${buildout:instance_eggs}


[xmltest]
# usage: ./bin/xmltest --xml -m PACKAGE
recipe = collective.xmltestreport
eggs =
    ${buildout:instance_eggs}
defaults = ['--auto-color', '--auto-progress']

[xmlalltests]
recipe = plone.recipe.alltests
#package-map = ${alltests:package-map}
#groups = ${alltests:groups}
exclude = ${testall:exclude}
test-script = ${buildout:bin-directory}/xmltest

#[pylint]
#recipe = zc.recipe.egg
#eggs = logilab.pylintinstaller
#extra-paths = ${instance:location}/lib/python
#entry-points = pylint=pylint.lint:Run
#arguments = sys.argv[1:]
#arguments = [
#    '--output-format=parseable',
#    '--zope=y',
#    '--reports=y',
#    '--disable-msg=E0611,F0401,W0232,E1101,C0103,C0111,R0201,W0201,R0911,R0904,F0220,E1103,R0901,E0211,E0213,E1002,W0622',
#    '--generated-members=objects',
#    ] + sys.argv[1:]

# Disable messages:
#
# E0611: No name %r in module %r. Used when a name cannot be found in a module.
# F0401: Unable to import %r (%s). Used when pylint has been unable to import a module.
# W0232: Class has no __init__ method. Used when a class has no __init__ method, neither its parent classes.
# C0103: Invalid name "%s" (should match %s). Used when the name doesn't match the regular expression associated to its type (constant, variable, class...).
# C0111: Message Missing docstring Description Used when a module, function, class or method has no docstring. Some special methods like init don't necessary require a docstring. ExplanationÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦
# R0201: Method could be a function
# W0201: Attribute %r defined outside __init__
# R0911: Too many return statements (%s/%s)

# E0211: Method has no argument
#        - Reason: raises an error on zope.interface definitions
# E0213 Method should have "self" as first argument
#       - Reason: raises an error on zope.interface definitions
# E1121 Too many positional arguments for function call
#       - Reason: ???
# E1002 Use super on an old style class
#       - Reason: super(CommentsViewlet, self).update() raises an error
# W0622 total_comments: Redefining built-in 'object'
#       - Reason: top level def function will not work (e.g. for catalog indexers)
# ...
# See http://pylint-messages.wikidot.com/all-messages for a full list.

#[pylint-test]
#recipe = collective.recipe.template
#input = inline:
#    #!/bin/sh
#    if [ -s pylint.log ]; then
#      rm pylint.log
#      echo "Old pylint.log file removed"
#    fi
#    echo "Running pylint"
#    PACKAGES="${buildout:package-directories}"
#    for pkg in $PACKAGES
#    do
#        find -L $pkg -regex ".*\.py" | xargs bin/pylint >> pylint.log
#    done
#    echo "Finished"
#output = ${buildout:directory}/bin/pylint-test
#mode = 755

[zptlint]
recipe = zc.recipe.egg
eggs =
   zptlint
entry-points = zptlint=zptlint:run

[zptlint-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -e zptlint.log ]; then
      echo "Old zptlint.log file removed"
      rm zptlint.log
    fi
    echo "Running zptlint-test"
    PACKAGES="${buildout:package-directories}"
    for pkg in $PACKAGES
    do
        find $pkg -regex ".*\.[c|z]?pt" | xargs -r bin/zptlint | perl -p -e 's/\s+$/ /g;s/\s+/ /g;s/\*{3}s?/\n/g' >> zptlint.log
    done
output = ${buildout:directory}/bin/zptlint-test
mode = 755

[pyflakes]
recipe = zc.recipe.egg
eggs =
   pyflakes
entry-points = pyflakes=pyflakes.scripts.pyflakes:main

[pyflakes-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    if [ -s pyflakes.log ]; then
      rm pyflakes.log
      echo "Old pyflakes.log file removed"
    fi
    echo "Running pyflakes"
    PACKAGES="${buildout:package-directories}"
    for pkg in $PACKAGES
    do
        find -L $pkg -regex ".*\.py" | xargs -r bin/pyflakes 2> pyflakes.log
    done
output = ${buildout:directory}/bin/pyflakes-test
mode = 755



